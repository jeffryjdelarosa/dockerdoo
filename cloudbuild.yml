substitutions:
  # Odoo variables
  _RUN_TESTS: '0'
  _PIP_AUTO_INSTALL: '0'
  _LOG_LEVEL: info
  _WITHOUT_DEMO: 'False'
# Allow variables without substitutions
options:
  substitution_option: 'ALLOW_LOOSE'
  # Use a faster machine for building
  machineType: 'N1_HIGHCPU_32'

steps:
# Pull a previous image, if exists to use cache for faster builds
- name: 'gcr.io/cloud-builders/docker'
  id: pull-dockerdoo
  waitFor: ['-']
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker pull gcr.io/$PROJECT_ID/${REPO_NAME}:${BRANCH_NAME} || exit 0

# Build the new image
- name: 'gcr.io/cloud-builders/docker'
  id: build
  waitFor: ['pull-dockerdoo']
  args:
    [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/${REPO_NAME}:${BRANCH_NAME}',
      '--cache-from', 'gcr.io/$PROJECT_ID/${REPO_NAME}:${BRANCH_NAME}',
      '.'
    ]

# Install PostgreSQL
- name: gcr.io/cloud-builders/docker
  id: postgres
  waitFor: ['-']
  args: 
    [
      'run', '--name=${REPO_NAME}-${BRANCH_NAME}',
      '-e', 'POSTGRES_DB=postgres',
      '-e', 'POSTGRES_USER=odoo',
      '-e', 'POSTGRES_PASSWORD=odoo',
      '--network=cloudbuild',
      '-d', 'postgres:11'
    ]

# Run dockerdoo with modules inside the repo and run tests
- name: 'gcr.io/$PROJECT_ID/$REPO_NAME:${BRANCH_NAME}'
  id: tests
  dir: /
  waitFor: ['postgres', 'build']
  args: ['odoo', '-d', '${REPO_NAME}-${BRANCH_NAME}', '--stop-after-init']
  env:
    - 'DB_PORT_5432_TCP_ADDR=${REPO_NAME}-${BRANCH_NAME}'
    - 'DB_ENV_POSTGRES_USER=odoo'
    - 'DB_ENV_POSTGRES_PASSWORD=odoo'
    - 'LOG_LEVEL=${_LOG_LEVEL}'
    - 'WITHOUT_DEMO=${_WITHOUT_DEMO}'
    - 'RUN_TESTS=${_RUN_TESTS}'
    - 'PIP_AUTO_INSTALL=${_PIP_AUTO_INSTALL}'

# Push the image to Google Cloud Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/${REPO_NAME}:${BRANCH_NAME}']

# Tag the image for GCR and Cloud Build
images: 
- 'gcr.io/$PROJECT_ID/${REPO_NAME}:${BRANCH_NAME}'

timeout: 1300s
